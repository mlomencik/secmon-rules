# ==================================
# === BEGIN - Portscan detection ===
# ==================================
# pravidla deteguju ako portscan ak sa z jednej IP v priebehu 60 sekund niekto pokusi
# pripojit na 10 roznych privilegovanych portov, 20 roznych TCP portov alebo 40 roznych
# UDP portov

type=Single
ptype=RegExp
pattern=(\d+):\w{3} [\s\d]\d [\d:]+ (\S+).*src=([\d.]+).*proto=(TCP|UDP).*dpt=(\d+)
varmap=iptables; id=1; host=2; ip=3; proto=4; port=5
context=!COUNTING_$+{ip} && !COUNTING_OFF_$+{ip}
desc=Create data structures for host $+{ip}
action=create COUNTING_$+{ip} 60 lcall %o $+{ip} -> ( sub { delete $hosts{$_[0]}; } ); \
	lcall %o $+{ip} $+{proto} $+{port} $+{id} -> \
	( sub { my($ip) = $_[0]; my($proto) = $_[1]; my($port) = $_[2]; my($id) = $_[3]; \
	$hosts{$ip} = { "TCP" => {}, "UDP" => {} }; \
	$ids = ${id}; \
	return $hosts{$ip}->{$proto}->{$port} = time(); } )

type=Single
ptype=Cached
pattern=iptables
context=!COUNTING_OFF_$+{ip}
continue=TakeNext
desc=Count iptables event for host $+{ip}
action=set COUNTING_$+{ip} 60; \
	lcall %o $+{ip} $+{proto} $+{port} $+{id} -> \
	( sub { my($ip) = $_[0]; my($proto) = $_[1]; my($port) = $_[2]; my($id) = $_[3]; \
	$ids .= ";" . ${id}; \
	return $hosts{$ip}->{$proto}->{$port} = time(); } )

type=Single
ptype=Cached
pattern=iptables
context=!COUNTING_OFF_$+{ip} && \
	$+{ip} -> ( sub { my($ip) = $_[0]; my($port); \
	my($priv) = 0; my($time) = time(); \
	foreach $port (keys %{$hosts{$ip}->{"TCP"}}) { \
		if ($time - $hosts{$ip}->{"TCP"}->{$port} > 60) \
			{ delete $hosts{$ip}->{"TCP"}->{$port}; } \
		elsif ($port < 1024) { ++$priv; } \
	} \
	foreach $port (keys %{$hosts{$ip}->{"UDP"}}) { \
		if ($time - $hosts{$ip}->{"UDP"}->{$port} > 60) \
			{ delete $hosts{$ip}->{"UDP"}->{$port}; } \
		elsif ($port < 1024) { ++$priv; } \
	} \
	return ($priv == 10 || \
			scalar(keys %{$hosts{$ip}->{"TCP"}}) == 20 || \
			scalar(keys %{$hosts{$ip}->{"UDP"}}) == 40); } )
desc=Host $+{ip} has accessed 10 privileged, 20 TCP or 40 UDP ports
action=lcall %ports $+{ip} -> ( sub { my($ip) = $_[0]; \
			my($tcp) = join(" ", keys %{$hosts{$ip}->{"TCP"}}); \
			my($udp) = join(" ", keys %{$hosts{$ip}->{"UDP"}}); \
			return "TCP: $tcp\nUDP: $udp"; } ); \
	create COUNTING_OFF_$+{ip} 300; \
	obsolete COUNTING_$+{ip}; \
	lcall %ids -> \
	( sub { return $ids; } ); \
	write  /var/www/html/secmon/__secInput $+{host} CEF:0|SECMON|iptables|ver|0|Portscan|0|src=$+{ip} cs1Label=parentEvents cs1=%ids

# === END - Portscan detection ===
